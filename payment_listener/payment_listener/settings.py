"""
Django settings for payment_listener project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from dotenv import load_dotenv
from pathlib import Path

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG')

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',') if os.getenv('ALLOWED_HOSTS') else []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'orders',
    'rest_framework',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "payment_listener.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "payment_listener.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

FIREBIRD_CONFIG = {
    'host': os.getenv('FIREBIRD_HOST'),
    'database': os.getenv('FIREBIRD_DATABASE'),
    'user': os.getenv('FIREBIRD_USER'),
    'password': os.getenv('FIREBIRD_PASSWORD'),
    'table_name': os.getenv('FIREBIRD_TABLE'),
    'payment_type': os.getenv('FIREBIRD_PAYMENT_TYPE')
}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'firebird': {
        'ENGINE': 'django.db.backends.firebird',
        'NAME': FIREBIRD_CONFIG.get('database', ''),
        'USER': FIREBIRD_CONFIG.get('user', ''),
        'PASSWORD': FIREBIRD_CONFIG.get('password', ''),
        'HOST': FIREBIRD_CONFIG.get('host', ''),
        'OPTIONS': {
            'charset': 'UTF8'
        }
    }
}

FIREBIRD_TABLE_NAME = os.getenv('FIREBIRD_TABLE_NAME')  # Tên bảng cụ thể cần theo dõi

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

PAYOS_CLIENT_ID = os.getenv('PAYOS_CLIENT_ID')
PAYOS_API_KEY = os.getenv('PAYOS_API_KEY')
PAYOS_CHECKSUM_KEY = os.getenv('PAYOS_CHECKSUM_KEY')

# Cấu hình máy in POS
POS_PRINTER_CONFIG = {
    'vendor_id': os.getenv('POS_PRINTER_VENDOR_ID'),  
    'product_id': os.getenv('POS_PRINTER_PRODUCT_ID'),
}

# Cấu hình giọng nói
VOICE_CONFIG = {
    'rate': os.getenv('VOICE_RATE'),  # Tốc độ đọc
    'volume': os.getenv('VOICE_VOLUME'),  # Âm lượng (0.0 đến 1.0)
    'voice': os.getenv('VOICE_LANGUAGE'),  # Ngôn ngữ
}

# Cấu hình Ngrok Webhook URL
NGROK_URL = os.getenv('NGROK_URL')
WEBHOOK_PATH = "/webhook/payos/"

PAYOS_URLS = {
    'CANCEL_URL': f"{NGROK_URL}/payment/cancel/",
    'RETURN_URL': f"{NGROK_URL}/payment/success/"
}
